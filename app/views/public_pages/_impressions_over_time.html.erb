<div class="inline-block">
  <h2 class="mt-4 text-2xl font-bold text-gray-900 dark:text-white flex items-center">
    Impressions
    <span class="ml-1">
      <div data-tooltip-target="impressions-over-time-tooltip">
        <svg class="w-4 h-4 text-gray-400 hover:text-gray-600 cursor-pointer" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h1m0-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
      </div>
    </span>
  </h2>
</div>
<div id="impressions-over-time-tooltip" role="tooltip" class="inline-block absolute invisible z-10 py-2 px-3 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip dark:bg-gray-700">
    We collect new impression data each day if your graph isn't showing enough data yet, it's because we are waiting for more data to be available. We will show up to <%= @maximum_days_of_data %> days of data.
    <div class="tooltip-arrow" data-popper-arrow></div>
</div>


<div class="w-full bg-white rounded-lg shadow dark:bg-gray-800 p-4 md:p-6 mt-4">
<% if @impression_daily_data_points_for_graph.count < 2 %>
   <p class="text-gray-700 dark:text-gray-300">We are awaiting more data to show the followers graph.</p>
  <% else %>
    <div id="impressions-chart"></div>
  <% end %>
</div>

<script>
  let impressionData = <%= @impression_daily_data_points_for_graph.to_json.html_safe %>;
  let maxYValue = Math.max(...impressionData);
  let minYValue = Math.min(...impressionData);

  let range = maxYValue - minYValue;
  let stepSize = Math.pow(10, range.toString().length - 1);
  let tickAmount = Math.ceil(range / stepSize);
  tickAmount = Math.max(tickAmount, 5);
  minYValue = Math.floor(minYValue / stepSize) * stepSize;
  maxYValue = Math.ceil(maxYValue / stepSize) * stepSize;

  window.addEventListener("load", function() {
    let options = {
      chart: {
        height: '600px',
        type: 'bar',
        fontFamily: 'Inter, sans-serif',
        toolbar: {
          show: false
        }
      },
      series: [{
        name: 'Impressions',
        data: impressionData
      }],
      xaxis: {
        categories: <%= @impression_formatted_labels_for_graph.to_json.html_safe %>,
        labels: {
          show: true,
          style: {
            fontFamily: "Inter, sans-serif",
            cssClass: 'text-xs font-normal fill-gray-500 dark:fill-gray-400'
          }
        }
      },
      yaxis: {
        min: minYValue,
        max: maxYValue,
        labels: {
          show: true,
          style: {
            fontFamily: "Inter, sans-serif",
            cssClass: 'text-xs font-normal fill-gray-500 dark:fill-gray-400'
          }
        }
      },
      plotOptions: {
        bar: {
          borderRadius: 5,
          columnWidth: '55%'
        }
      },
      dataLabels: {
        enabled: false
      },
      fill: {
        colors: ['#1A56DB', '#7E3AF2', '#FEB019']
      },
      stroke: {
        show: true,
        width: 2,
        colors: ['#ffffff']
      },
      tooltip: {
        y: {
          formatter: function (val) {
            return val; // Display raw value without formatting
          }
        }
      },
      grid: {
        show: true,
        strokeDashArray: 4
      }
    };

    if (document.getElementById("impressions-chart") && typeof ApexCharts !== 'undefined') {
      const chart = new ApexCharts(document.getElementById("impressions-chart"), options);
      chart.render();
    }
  });
</script>
