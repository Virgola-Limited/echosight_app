<% tooltip_text = "We collect new engagement data each day if your graph isn't showing enough data yet, it's because we are waiting for more data to be available. We will show up to 7 days of data.".html_safe %>

<div class="inline-block w-full dark:bg-gray-900" id="engagement-chart-container">
  <h2 class="mt-4 text-2xl font-bold text-gray-900 dark:text-white flex items-center justify-between">
    <div class="flex items-center">
    <div class="graph-title-text tracking-wide">Engagement</div>
    <span class="ml-1 hide-from-share">
        <div data-tooltip-target="engagement-tooltip">
          <svg class="w-4 h-4 text-gray-400 hover:text-gray-600 cursor-pointer" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h1m0-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
      </span>
    </div>
      <button data-modal-target="share-engagement-modal" data-chart-id="engagement-chart-container" data-modal-toggle="share-engagement-modal" class="hide-from-share block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800" type="button">
        Share
      </button>
  </h2>

  <%= render Shared::TooltipComponent.new(id: "engagement-tooltip", text: tooltip_text) %>
  <%= render(Shared::ShareToolComponent.new(modal_id: 'share-engagement-modal', chart_id: 'engagement-chart-container', title: 'Share Engagement Chart')) %>

  <div class="w-full bg-white rounded-lg shadow dark:bg-gray-800 p-4 md:p-6 mt-4">
    <% if engagement_rate_percentage_per_day.count < 2 || engagement_rate_percentage_per_day.all? { |data| data[:engagement_rate_percentage].zero? } %>
    <p class="text-gray-700 dark:text-gray-300">We are awaiting more data to show the engagement rate graph.</p>
  <% else %>
      <div id="engagement-chart"></div>
      <div class="flex justify-end mt-2">
        <%= link_to 'echosight.io', root_url, class: 'text-yellow-800 text-xs font-medium px-2.5 py-0.5 rounded dark:text-yellow-300' %>
      </div>
    <% end %>
  </div>
</div>

<script>
  window.addEventListener("load", function() {
    let options = {
      chart: {
        height: '400px',
        type: "bar",
        fontFamily: "Inter, sans-serif",
        toolbar: {
          show: false,
        },
      },
      series: [{
        name: "Engagement Rate",
        data: <%= engagement_rate_percentage_per_day.map { |entry| entry[:engagement_rate_percentage] }.to_json.html_safe %>
      }],
      xaxis: {
        categories: <%= engagement_rate_percentage_per_day.map { |entry| entry[:formatted_label] }.to_json.html_safe %>,
        labels: {
          show: true,
          style: {
            fontFamily: "Inter, sans-serif",
            cssClass: 'text-xs font-normal fill-gray-500 dark:fill-gray-400'
          }
        }
      },
      yaxis: {
        min: 0,
        labels: {
          formatter: function (val) {
            return val.toFixed(2) + '%'; // Display y-axis values as percentages
          },
          show: true,
          style: {
            fontFamily: "Inter, sans-serif",
            cssClass: 'text-xs font-normal fill-gray-500 dark:fill-gray-400'
          }
        }
      },
      plotOptions: {
        bar: {
          borderRadius: 5,
          columnWidth: '55%',
        },
      },
      dataLabels: {
        enabled: false,
      },
      fill: {
        colors: ['#1A56DB', '#7E3AF2', '#FEB019'], // Colors for each bar
      },
      stroke: {
        show: true,
        width: 2,
        colors: ['#ffffff'],
      },
      tooltip: {
        y: {
          formatter: function (val) {
            return val.toFixed(2) + '%'; // Format tooltip values as percentages
          }
        }
      },
      grid: {
        show: true,
        strokeDashArray: 4,
      },
    };

    if (document.getElementById("engagement-chart") && typeof ApexCharts !== 'undefined') {
      const chart = new ApexCharts(document.getElementById("engagement-chart"), options);
      chart.render();
    }
  });
</script>
