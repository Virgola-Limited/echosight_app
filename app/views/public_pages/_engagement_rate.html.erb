<div class="inline-block">
  <h2 class="mt-4 text-2xl font-bold text-gray-900 dark:text-white flex items-center">
    Engagement Rate
    <span class="ml-1">
      <div data-tooltip-target="engagement-tooltip">
        <svg class="w-4 h-4 text-gray-400 hover:text-gray-600 cursor-pointer" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h1m0-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
      </div>
    </span>
  </h2>
</div>
<div id="engagement-tooltip" role="tooltip" class="inline-block absolute invisible z-10 py-2 px-3 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip dark:bg-gray-700">
    We collect new engagement data each day if your graph isn't showing enough data yet, it's because we are waiting for more data to be available. We will show up to 28 days of data.
    <div class="tooltip-arrow" data-popper-arrow></div>
</div>

<div class="w-full bg-white rounded-lg shadow dark:bg-gray-800 p-4 md:p-6 mt-4">
  <div id="engagement-chart"></div>
</div>

<script>
  window.addEventListener("load", function() {
    let options = {
      chart: {
        height: '600px',
        type: "bar",
        fontFamily: "Inter, sans-serif",
        toolbar: {
          show: false,
        },
      },
      series: [{
        name: "Engagement Rate",
        data: <%= @engagement_rate_percentage_per_day.map { |entry| entry[:engagement_rate_percentage] }.to_json.html_safe %>
      }],
      xaxis: {
        categories: <%= @engagement_rate_percentage_per_day.map { |entry| entry[:date].strftime('%b %d') }.to_json.html_safe %>,
        labels: {
          show: true,
          style: {
            fontFamily: "Inter, sans-serif",
            cssClass: 'text-xs font-normal fill-gray-500 dark:fill-gray-400'
          }
        }
      },
      yaxis: {
        min: 0,
        // Adjust max value according to your data or leave it auto-calculated
        labels: {
          formatter: function (val) {
            return val.toFixed(2) + '%'; // Display y-axis values as percentages
          },
          show: true,
          style: {
            fontFamily: "Inter, sans-serif",
            cssClass: 'text-xs font-normal fill-gray-500 dark:fill-gray-400'
          }
        }
      },
      plotOptions: {
        bar: {
          borderRadius: 5,
          columnWidth: '55%',
        },
      },
      dataLabels: {
        enabled: false,
      },
      fill: {
        colors: ['#1A56DB', '#7E3AF2', '#FEB019'], // Colors for each bar
      },
      stroke: {
        show: true,
        width: 2,
        colors: ['#ffffff'],
      },
      tooltip: {
        y: {
          formatter: function (val) {
            return val.toFixed(2) + '%'; // Format tooltip values as percentages
          }
        }
      },
      grid: {
        show: true,
        strokeDashArray: 4,
      },
    };

    if (document.getElementById("engagement-chart") && typeof ApexCharts !== 'undefined') {
      const chart = new ApexCharts(document.getElementById("engagement-chart"), options);
      chart.render();
    }
  });
</script>
